{"version":3,"sources":["store/actions/actionTypes.js","store/helpers/boardGeneration.js","store/actions/minesweeper.js","components/DifficultyForm.js","components/MineSVG.js","components/NumberSVG.js","components/Gameboard.js","components/EndScreen.js","App.js","store/helpers/copyBoard.js","store/helpers/clearAdjacent.js","store/reducers/minesweeper.js","index.js"],"names":["STORE_DIFFICULTY","START_GAME","FLAG_SQUARE","CLEAR_SQUARE","RESTART_GAME","SUBMIT_SCORE","SAVE_FETCHED_SCORES","SET_SCORE_SUBMITTED","flattenArray","array","reduce","acc","cur","startGame","difficulty","board","size","i","row","j","push","clear","mine","flag","adjacent","generateBoard","length","x","y","calculateAdjacent","mines","filter","square","Math","floor","random","column","populateMines","type","actionTypes","saveFetchedScores","scores","submitScore","name","connect","state","minesweeper","dispatch","storeDifficulty","actions","props","handleChange","e","target","value","onSubmit","preventDefault","className","id","defaultChecked","onChange","htmlFor","MineSVG","viewBox","xmlns","transform","d","fill","stroke","strokeLinejoin","strokeWidth","opacity","NumberSVG","display","number","strokeLinecap","fillRule","vectorEffect","Fragment","gameOver","winner","time","winTime","flagSquare","col","clearSquare","useState","timeDisplay","setTimeDisplay","timer","setInterval","Date","now","useEffect","clearInterval","map","onContextMenu","handleRightClick","onClick","handleClick","width","height","isFetched","scoreSubmitted","restartGame","postScore","worstScore","fetch","method","body","JSON","stringify","then","response","json","data","fetchScores","catch","error","setScoreSubmitted","setWorstScore","score","setName","usersScore","user","handleSubmit","placeholder","required","maxLength","copyBoard","boardCopy","checkSurrounds","clearAdjacent","initialState","Easy","Medium","Hard","action","newScores","sort","a","b","slice","reducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fbb660f.chunk.js","sourcesContent":["export const STORE_DIFFICULTY = \"STORE_DIFFICULTY\";\nexport const START_GAME = \"START_GAME\";\nexport const FLAG_SQUARE = \"FLAG_SQUARE\";\nexport const CLEAR_SQUARE = \"CLEAR_SQUARE\";\nexport const RESTART_GAME = \"RESTART_GAME\";\nexport const SUBMIT_SCORE = \"SUBMIT_SCORE\";\nexport const FETCH_SCORES = \"FETCH_SCORES\";\nexport const SAVE_FETCHED_SCORES = \"SAVE_FETCHED_SCORES\";\nexport const SET_SCORE_SUBMITTED = \"SET_SCORE_SUBMITTED\";\n","// Generate empty board\nexport const generateBoard = (difficulty) => {\n  let size;\n  switch (difficulty) {\n    case \"Easy\":\n      size = 10;\n      break;\n    case \"Medium\":\n      size = 20;\n      break;\n    case \"Hard\":\n      size = 30;\n      break;\n    default:\n      break;\n  }\n\n  let array = [];\n  for (let i = 0; i < size; i++) {\n    let row = [];\n    for (let j = 0; j < size; j++) {\n      row.push({\n        clear: false,\n        mine: false,\n        flag: false,\n        adjacent: 0,\n      });\n    }\n    array.push(row);\n  }\n\n  return array;\n};\n\n// Turn 2 dimensional array into 1 dimensional array\nexport const flattenArray = (array) => {\n  return array.reduce((acc, cur) => {\n    return [...acc, ...cur];\n  }, []);\n};\n\n// Add mines to board\nexport const populateMines = (difficulty, board) => {\n  let mines;\n  switch (difficulty) {\n    case \"Easy\":\n      mines = 15;\n      break;\n    case \"Medium\":\n      mines = 70;\n      break;\n    case \"Hard\":\n      mines = 180;\n      break;\n    default:\n      break;\n  }\n\n  // Randomly insert mines until desired amount added\n  while (\n    flattenArray(board).filter((square) => square.mine === true).length < mines\n  ) {\n    const row = Math.floor(Math.random() * board.length);\n    const column = Math.floor(Math.random() * board.length);\n    board[row][column].mine = true;\n  }\n\n  return board;\n};\n\n// Calculate the adjacent mines to each square\nexport const calculateAdjacent = (board) => {\n  for (let i = 0; i < board.length; i++) {\n    for (let j = 0; j < board[i].length; j++) {\n      // Continue if square is a mine\n      if (board[i][j].mine) {\n        continue;\n      }\n      // For each square check the 8 squares surrounding it\n      for (let x = i - 1; x <= i + 1; x++) {\n        for (let y = j - 1; y <= j + 1; y++) {\n          // Continue if square is outside boundary\n          if (x <= -1 || x >= board.length || y <= -1 || y >= board[i].length) {\n            continue;\n          }\n          if (board[x][y].mine) {\n            board[i][j].adjacent = board[i][j].adjacent + 1;\n          }\n        }\n      }\n    }\n  }\n  return board;\n};\n","import * as actionTypes from \"./actionTypes\";\nimport {\n  generateBoard,\n  populateMines,\n  calculateAdjacent,\n} from \"../helpers/boardGeneration\";\n\nexport const storeDifficulty = (difficulty) => {\n  return {\n    type: actionTypes.STORE_DIFFICULTY,\n    difficulty,\n  };\n};\n\nexport const startGame = (difficulty) => {\n  let board = generateBoard(difficulty);\n  board = populateMines(difficulty, board);\n  board = calculateAdjacent(board);\n\n  return {\n    type: actionTypes.START_GAME,\n    startGame: true,\n    board,\n  };\n};\n\nexport const flagSquare = (row, col) => {\n  return {\n    type: actionTypes.FLAG_SQUARE,\n    row,\n    col,\n  };\n};\n\nexport const clearSquare = (row, col) => {\n  return {\n    type: actionTypes.CLEAR_SQUARE,\n    row,\n    col,\n  };\n};\n\nexport const restartGame = () => {\n  return {\n    type: actionTypes.RESTART_GAME,\n  };\n};\n\nexport const fetchScores = () => {\n  return (dispatch) => {\n    return fetch(\n      \"https://minesweeper-237c5-default-rtdb.firebaseio.com/scores.json\"\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch(saveFetchedScores(data));\n      })\n      .catch((error) => {});\n  };\n};\n\nexport const saveFetchedScores = (scores) => {\n  return {\n    type: actionTypes.SAVE_FETCHED_SCORES,\n    scores,\n  };\n};\n\nexport const postScore = (name, winTime, difficulty) => {\n  return (dispatch) => {\n    fetch(\n      `https://minesweeper-237c5-default-rtdb.firebaseio.com/scores/${difficulty}.json`,\n      {\n        method: \"PATCH\",\n        body: JSON.stringify({\n          [name]: winTime,\n        }),\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        dispatch(submitScore(name));\n      });\n  };\n};\n\nexport const submitScore = (name) => {\n  return {\n    type: actionTypes.SUBMIT_SCORE,\n    name,\n  };\n};\n\nexport const setScoreSubmitted = () => {\n  return {\n    type: actionTypes.SET_SCORE_SUBMITTED,\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\n\nexport const DifficultyForm = (props) => {\n  const handleChange = (e) => {\n    props.storeDifficulty(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.startGame(props.difficulty);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"DifficultyForm\">\n      <h2>Choose Difficulty</h2>\n      <div className=\"radio-container\">\n        <div>\n          <input\n            type=\"radio\"\n            name=\"difficulty\"\n            id=\"Easy\"\n            value=\"Easy\"\n            defaultChecked={props.difficulty === \"Easy\"}\n            onChange={handleChange}\n            data-testid=\"easy-difficulty\"\n          />\n          <label htmlFor=\"Easy\">Easy</label>\n        </div>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"difficulty\"\n            id=\"Medium\"\n            value=\"Medium\"\n            defaultChecked={props.difficulty === \"Medium\"}\n            onChange={handleChange}\n            data-testid=\"medium-difficulty\"\n          />\n          <label htmlFor=\"Medium\">Medium</label>\n        </div>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"difficulty\"\n            id=\"Hard\"\n            value=\"Hard\"\n            defaultChecked={props.difficulty === \"Hard\"}\n            onChange={handleChange}\n          />\n          <label htmlFor=\"Hard\">Hard</label>\n        </div>\n      </div>\n      <div className=\"center-container\">\n        <button className=\"button\" type=\"submit\">Start</button>\n      </div>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    difficulty: state.minesweeper.difficulty,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    storeDifficulty: (difficulty) => {\n      dispatch(actions.storeDifficulty(difficulty));\n    },\n    startGame: (difficulty) => {\n      dispatch(actions.startGame(difficulty));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DifficultyForm);\n","import React from \"react\";\n\nconst MineSVG = () => {\n  return (\n    <svg viewBox=\"0 0 286.44687 278.86679\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g transform=\"translate(-268.22 -1287.1)\">\n        <path\n          d=\"m442.26 1288.1-23.605 27.515-0.07334-0.0122c-17.863-1.1118-35.17 2.2794-50.666 9.3132l-30.968-29.046 8.9253 42.498c-12.614 9.9304-23.023 22.727-30.182 37.57l-46.47 0.0642 37.613 27.025c-0.11702 0.636-0.28314 1.2542-0.3892 1.8946-2.372 14.32-1.7471 28.503 1.3611 41.816l-38.131 27.41 49.719 1.7846c6.6924 11.572 15.503 21.916 26.021 30.305l-17.811 51.013 46.532-34.727c6.4932 2.4536 13.305 4.3136 20.412 5.4912 5.881 0.9742 11.763 1.4682 17.537 1.4736l21.509 35.48 10.978-40.572c13.037-4.174 25.071-10.799 35.54-19.428l42.223 14.172-21.411-37.02c8.1414-12.109 13.93-26.125 16.578-41.406l36.166-13.299-35.009-14.613c-1.5138-16.765-6.9743-32.681-15.565-46.58l19.952-31.691-35.796 11.812c-12.159-12.04-27.261-21.291-44.445-26.425l-0.54496-31.817z\"\n          fill=\"#8a9da5\"\n          stroke=\"#000\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"2\"\n        />\n        <path\n          d=\"m511.76 1430.4c-28.183 59.469-98.339 79.7-160.79 55.742-7.487-2.8722-14.518-6.3552-21.112-10.408 10.674 19.214 27.891 34.939 50.002 43.421 49.987 19.175 106.12-5.8326 125.29-55.821 5.2249-13.621 7.5598-19.271 6.6122-32.933z\"\n          fill=\"#445057\"\n        />\n        <path\n          d=\"m368.32 1330c-37.771 9.247-58.27 58.177-41.719 89.887-0.59512-42.05 33.115-81.715 69.687-92.187-9.3485-1.2144-18.956-0.4596-27.968 2.3004z\"\n          fill=\"#e4eaed\"\n          opacity=\".30943\"\n        />\n        <path d=\"m362.38 1390.9c1.5666 0.5546 3.041 1.4964 4.23 2.8182 3.8054 4.23 3.4607 10.751-0.76908 14.557-1.7628 1.586-3.9412 2.4318-6.1378 2.595 3.4363 1.1986 7.431 0.555 10.326-2.0494 4.2297-3.8054 4.5744-10.327 0.76908-14.557-2.2102-2.4568-5.3567-3.5808-8.418-3.364z\" />\n        <g transform=\"matrix(1.7683 -1.5909 1.5908 1.7683 -2577.4 -478.98)\">\n          <path d=\"m379.63 1423.1c0.33367 0.6139 0.52963 1.3229 0.52963 2.0703-1e-5 2.3921-1.9413 4.3333-4.3333 4.3333-0.99701 1e-4 -1.9157-0.3481-2.6482-0.9147 0.73699 1.3409 2.1665 2.263 3.8037 2.2629 2.392 0 4.3333-1.9412 4.3333-4.3333 0-1.3894-0.66745-2.6254-1.6852-3.4185z\" />\n          <path\n            d=\"m374.24 1428.8c-0.2793-0.5139-0.44333-1.1074-0.44333-1.733 1e-5 -2.0023 1.625-3.6272 3.6273-3.6272 0.83456-1e-4 1.6035 0.2914 2.2167 0.7656-0.6169-1.1224-1.8135-1.8942-3.1839-1.8941-2.0023 0-3.6273 1.6249-3.6273 3.6272 0 1.163 0.5587 2.1976 1.4106 2.8615z\"\n            fill=\"#e4eaed\"\n          />\n        </g>\n        <path\n          d=\"m361.89 1409.3c-1.3114-0.4646-2.5456-1.2532-3.5408-2.3596-3.1853-3.5408-2.8967-8.9992 0.64384-12.185 1.4756-1.3278 3.2991-2.0358 5.1376-2.1726-2.8764-1.0032-6.2201-0.4646-8.6432 1.7158-3.5406 3.1854-3.8291 8.644-0.64388 12.185 1.8501 2.0566 4.4839 2.9972 7.0465 2.8162z\"\n          fill=\"#e4eaed\"\n        />\n        <path\n          d=\"m309.12 1421.1-0.03273 2.1579 210.25 4.0382-0.04156-2.1564-30.406-2.1008-29.46-0.397-8.7221-0.3819-71.007-1.6766-70.577 0.5166z\"\n          fill=\"#e4eaed\"\n        />\n        <g transform=\"matrix(1.7683 -1.5909 1.5908 1.7683 -2533.4 -478.98)\">\n          <path d=\"m379.63 1423.1c0.33367 0.6139 0.52963 1.3229 0.52963 2.0703-1e-5 2.3921-1.9413 4.3333-4.3333 4.3333-0.99701 1e-4 -1.9157-0.3481-2.6482-0.9147 0.73699 1.3409 2.1665 2.263 3.8037 2.2629 2.392 0 4.3333-1.9412 4.3333-4.3333 0-1.3894-0.66745-2.6254-1.6852-3.4185z\" />\n          <path\n            d=\"m374.24 1428.8c-0.2793-0.5139-0.44333-1.1074-0.44333-1.733 1e-5 -2.0023 1.625-3.6272 3.6273-3.6272 0.83456-1e-4 1.6035 0.2914 2.2167 0.7656-0.6169-1.1224-1.8135-1.8942-3.1839-1.8941-2.0023 0-3.6273 1.6249-3.6273 3.6272 0 1.163 0.5587 2.1976 1.4106 2.8615z\"\n            fill=\"#e4eaed\"\n          />\n        </g>\n        <g transform=\"matrix(1.7911 -.95198 1.1163 2.1004 -1944.1 -1193.8)\">\n          <path d=\"m379.63 1423.1c0.33367 0.6139 0.52963 1.3229 0.52963 2.0703-1e-5 2.3921-1.9413 4.3333-4.3333 4.3333-0.99701 1e-4 -1.9157-0.3481-2.6482-0.9147 0.73699 1.3409 2.1665 2.263 3.8037 2.2629 2.392 0 4.3333-1.9412 4.3333-4.3333 0-1.3894-0.66745-2.6254-1.6852-3.4185z\" />\n          <path\n            d=\"m374.24 1428.8c-0.2793-0.5139-0.44333-1.1074-0.44333-1.733 1e-5 -2.0023 1.625-3.6272 3.6273-3.6272 0.83456-1e-4 1.6035 0.2914 2.2167 0.7656-0.6169-1.1224-1.8135-1.8942-3.1839-1.8941-2.0023 0-3.6273 1.6249-3.6273 3.6272 0 1.163 0.5587 2.1976 1.4106 2.8615z\"\n            fill=\"#e4eaed\"\n          />\n        </g>\n        <g transform=\"matrix(1.7911 -.95198 1.1163 2.1004 -1943.8 -1231.6)\">\n          <path d=\"m379.63 1423.1c0.33367 0.6139 0.52963 1.3229 0.52963 2.0703-1e-5 2.3921-1.9413 4.3333-4.3333 4.3333-0.99701 1e-4 -1.9157-0.3481-2.6482-0.9147 0.73699 1.3409 2.1665 2.263 3.8037 2.2629 2.392 0 4.3333-1.9412 4.3333-4.3333 0-1.3894-0.66745-2.6254-1.6852-3.4185z\" />\n          <path\n            d=\"m374.24 1428.8c-0.2793-0.5139-0.44333-1.1074-0.44333-1.733 1e-5 -2.0023 1.625-3.6272 3.6273-3.6272 0.83456-1e-4 1.6035 0.2914 2.2167 0.7656-0.6169-1.1224-1.8135-1.8942-3.1839-1.8941-2.0023 0-3.6273 1.6249-3.6273 3.6272 0 1.163 0.5587 2.1976 1.4106 2.8615z\"\n            fill=\"#e4eaed\"\n          />\n        </g>\n        <g transform=\"matrix(1.7683 -1.5909 1.5908 1.7683 -2527.3 -524.36)\">\n          <path d=\"m379.63 1423.1c0.33367 0.6139 0.52963 1.3229 0.52963 2.0703-1e-5 2.3921-1.9413 4.3333-4.3333 4.3333-0.99701 1e-4 -1.9157-0.3481-2.6482-0.9147 0.73699 1.3409 2.1665 2.263 3.8037 2.2629 2.392 0 4.3333-1.9412 4.3333-4.3333 0-1.3894-0.66745-2.6254-1.6852-3.4185z\" />\n          <path\n            d=\"m374.24 1428.8c-0.2793-0.5139-0.44333-1.1074-0.44333-1.733 1e-5 -2.0023 1.625-3.6272 3.6273-3.6272 0.83456-1e-4 1.6035 0.2914 2.2167 0.7656-0.6169-1.1224-1.8135-1.8942-3.1839-1.8941-2.0023 0-3.6273 1.6249-3.6273 3.6272 0 1.163 0.5587 2.1976 1.4106 2.8615z\"\n            fill=\"#e4eaed\"\n          />\n        </g>\n        <g transform=\"matrix(1.6778 -.87254 1.1431 2.0785 -1817.7 -1190.2)\">\n          <path d=\"m379.63 1423.1c0.33367 0.6139 0.52963 1.3229 0.52963 2.0703-1e-5 2.3921-1.9413 4.3333-4.3333 4.3333-0.99701 1e-4 -1.9157-0.3481-2.6482-0.9147 0.73699 1.3409 2.1665 2.263 3.8037 2.2629 2.392 0 4.3333-1.9412 4.3333-4.3333 0-1.3894-0.66745-2.6254-1.6852-3.4185z\" />\n          <path\n            d=\"m374.24 1428.8c-0.2793-0.5139-0.44333-1.1074-0.44333-1.733 1e-5 -2.0023 1.625-3.6272 3.6273-3.6272 0.83456-1e-4 1.6035 0.2914 2.2167 0.7656-0.6169-1.1224-1.8135-1.8942-3.1839-1.8941-2.0023 0-3.6273 1.6249-3.6273 3.6272 0 1.163 0.5587 2.1976 1.4106 2.8615z\"\n            fill=\"#e4eaed\"\n          />\n        </g>\n        <g transform=\"matrix(1.6778 -.87254 1.1431 2.0785 -1817.7 -1190.2)\">\n          <path d=\"m379.63 1423.1c0.33367 0.6139 0.52963 1.3229 0.52963 2.0703-1e-5 2.3921-1.9413 4.3333-4.3333 4.3333-0.99701 1e-4 -1.9157-0.3481-2.6482-0.9147 0.73699 1.3409 2.1665 2.263 3.8037 2.2629 2.392 0 4.3333-1.9412 4.3333-4.3333 0-1.3894-0.66745-2.6254-1.6852-3.4185z\" />\n          <path\n            d=\"m374.24 1428.8c-0.2793-0.5139-0.44333-1.1074-0.44333-1.733 1e-5 -2.0023 1.625-3.6272 3.6273-3.6272 0.83456-1e-4 1.6035 0.2914 2.2167 0.7656-0.6169-1.1224-1.8135-1.8942-3.1839-1.8941-2.0023 0-3.6273 1.6249-3.6273 3.6272 0 1.163 0.5587 2.1976 1.4106 2.8615z\"\n            fill=\"#e4eaed\"\n          />\n        </g>\n        <g transform=\"matrix(1.6778 -.87254 1.1431 2.0785 -1811.6 -1231.9)\">\n          <path d=\"m379.63 1423.1c0.33367 0.6139 0.52963 1.3229 0.52963 2.0703-1e-5 2.3921-1.9413 4.3333-4.3333 4.3333-0.99701 1e-4 -1.9157-0.3481-2.6482-0.9147 0.73699 1.3409 2.1665 2.263 3.8037 2.2629 2.392 0 4.3333-1.9412 4.3333-4.3333 0-1.3894-0.66745-2.6254-1.6852-3.4185z\" />\n          <path\n            d=\"m374.24 1428.8c-0.2793-0.5139-0.44333-1.1074-0.44333-1.733 1e-5 -2.0023 1.625-3.6272 3.6273-3.6272 0.83456-1e-4 1.6035 0.2914 2.2167 0.7656-0.6169-1.1224-1.8135-1.8942-3.1839-1.8941-2.0023 0-3.6273 1.6249-3.6273 3.6272 0 1.163 0.5587 2.1976 1.4106 2.8615z\"\n            fill=\"#e4eaed\"\n          />\n        </g>\n        <g transform=\"matrix(1.523 -.13857 .51676 2.2918 -826.01 -1770.3)\">\n          <path d=\"m379.63 1423.1c0.33367 0.6139 0.52963 1.3229 0.52963 2.0703-1e-5 2.3921-1.9413 4.3333-4.3333 4.3333-0.99701 1e-4 -1.9157-0.3481-2.6482-0.9147 0.73699 1.3409 2.1665 2.263 3.8037 2.2629 2.392 0 4.3333-1.9412 4.3333-4.3333 0-1.3894-0.66745-2.6254-1.6852-3.4185z\" />\n          <path\n            d=\"m374.24 1428.8c-0.2793-0.5139-0.44333-1.1074-0.44333-1.733 1e-5 -2.0023 1.625-3.6272 3.6273-3.6272 0.83456-1e-4 1.6035 0.2914 2.2167 0.7656-0.6169-1.1224-1.8135-1.8942-3.1839-1.8941-2.0023 0-3.6273 1.6249-3.6273 3.6272 0 1.163 0.5587 2.1976 1.4106 2.8615z\"\n            fill=\"#e4eaed\"\n          />\n        </g>\n        <g transform=\"matrix(1.523 -.13857 .51676 2.2918 -821.81 -1810.2)\">\n          <path d=\"m379.63 1423.1c0.33367 0.6139 0.52963 1.3229 0.52963 2.0703-1e-5 2.3921-1.9413 4.3333-4.3333 4.3333-0.99701 1e-4 -1.9157-0.3481-2.6482-0.9147 0.73699 1.3409 2.1665 2.263 3.8037 2.2629 2.392 0 4.3333-1.9412 4.3333-4.3333 0-1.3894-0.66745-2.6254-1.6852-3.4185z\" />\n          <path\n            d=\"m374.24 1428.8c-0.2793-0.5139-0.44333-1.1074-0.44333-1.733 1e-5 -2.0023 1.625-3.6272 3.6273-3.6272 0.83456-1e-4 1.6035 0.2914 2.2167 0.7656-0.6169-1.1224-1.8135-1.8942-3.1839-1.8941-2.0023 0-3.6273 1.6249-3.6273 3.6272 0 1.163 0.5587 2.1976 1.4106 2.8615z\"\n            fill=\"#e4eaed\"\n          />\n        </g>\n        <path\n          transform=\"translate(339.84 1356.8)\"\n          d=\"m13.5 145.93c-6 8.5-21.5 49.5-19.5 46.5s45.5-34 42.5-36-21.5-10-23-10.5z\"\n          fill=\"#445057\"\n        />\n        <path\n          transform=\"translate(339.84 1356.8)\"\n          d=\"m73.5 160.43c8 22 18 36 18 36l10-38-25.5 2\"\n          fill=\"#445057\"\n        />\n        <path\n          transform=\"translate(339.84 1356.8)\"\n          d=\"m134.5 141.93s44 18 43 16-23-36-23-36l-20 20z\"\n          fill=\"#445057\"\n        />\n        <path\n          transform=\"translate(339.84 1356.8)\"\n          d=\"m78.135-38.758s3.8891-1.0607 7.4246-1.7678 15.556-24.749 15.556-24.749l-22.981 26.516z\"\n          fill=\"#e4eaed\"\n        />\n        <path\n          transform=\"translate(339.84 1356.8)\"\n          d=\"m145.66-8.3519s1.4142 1.4142 3.5355 1.4142 31.82-12.374 30.406-12.374-33.588 10.96-33.941 10.96z\"\n          fill=\"#e4eaed\"\n        />\n        <path\n          transform=\"translate(339.84 1356.8)\"\n          d=\"m-64.347 20.993c2.8284 0 42.073 0.35355 42.073 0.35355l-2.1213 3.5355-39.952-3.8891z\"\n          fill=\"#e4eaed\"\n        />\n        <path\n          d=\"m309.12 1423.2-0.03273 2.1579 210.25 4.0382-0.04156-2.1564-30.406-2.1008-29.46-0.397-8.7221-0.3819-71.007-1.6766-70.577 0.5166z\"\n          fill=\"#445057\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default MineSVG;\n","import React from \"react\";\n\nconst NumberSVG = (props) => {\n  let display = [];\n  switch (props.number) {\n    case 1:\n      display.push(\n        <svg viewBox=\"-0.2 0 0.715 0.715\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g\n            className={`number${props.number}`}\n            strokeLinecap=\"round\"\n            fillRule=\"nonzero\"\n            strokeWidth=\"0.25mm\"\n          >\n            <path\n              d=\"M 0.273 0 L 0.273 0.715 L 0.182 0.715 L 0.182 0.112 L 0 0.179 L 0 0.097 L 0.259 0 L 0.273 0 Z\"\n              vectorEffect=\"non-scaling-stroke\"\n            />\n          </g>\n        </svg>\n      );\n      break;\n    case 2:\n      display.push(\n        <svg viewBox=\"-0.15 0 0.715 0.715\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g\n            className={`number${props.number}`}\n            strokeLinecap=\"round\"\n            fillRule=\"nonzero\"\n            strokeWidth=\"0.25mm\"\n          >\n            <path\n              d=\"M 0.48 0.647 L 0.48 0.721 L 0.014 0.721 L 0.014 0.656 L 0.247 0.397 Q 0.275 0.366 0.295 0.34 A 0.567 0.567 0 0 0 0.314 0.316 A 0.35 0.35 0 0 0 0.329 0.292 Q 0.336 0.28 0.341 0.27 A 0.163 0.163 0 0 0 0.347 0.255 A 0.166 0.166 0 0 0 0.356 0.201 A 0.145 0.145 0 0 0 0.348 0.151 A 0.13 0.13 0 0 0 0.324 0.111 A 0.104 0.104 0 0 0 0.263 0.076 A 0.156 0.156 0 0 0 0.233 0.073 A 0.204 0.204 0 0 0 0.199 0.076 Q 0.18 0.079 0.164 0.086 A 0.114 0.114 0 0 0 0.154 0.092 Q 0.122 0.11 0.107 0.143 A 0.159 0.159 0 0 0 0.094 0.187 A 0.21 0.21 0 0 0 0.091 0.219 L 0 0.219 A 0.237 0.237 0 0 1 0.014 0.136 A 0.223 0.223 0 0 1 0.026 0.109 A 0.195 0.195 0 0 1 0.101 0.032 A 0.232 0.232 0 0 1 0.105 0.03 A 0.216 0.216 0 0 1 0.167 0.006 Q 0.193 0.001 0.224 0 A 0.383 0.383 0 0 1 0.233 0 Q 0.334 0 0.39 0.052 A 0.173 0.173 0 0 1 0.446 0.169 A 0.239 0.239 0 0 1 0.447 0.19 A 0.208 0.208 0 0 1 0.436 0.258 A 0.248 0.248 0 0 1 0.429 0.274 A 0.41 0.41 0 0 1 0.399 0.332 A 0.486 0.486 0 0 1 0.381 0.359 A 0.881 0.881 0 0 1 0.314 0.44 L 0.124 0.647 L 0.48 0.647 Z\"\n              vectorEffect=\"non-scaling-stroke\"\n            />\n          </g>\n        </svg>\n      );\n      break;\n    case 3:\n      display.push(\n        <svg viewBox=\"-0.15 0 0.715 0.715\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g\n            className={`number${props.number}`}\n            strokeLinecap=\"round\"\n            fillRule=\"nonzero\"\n            strokeWidth=\"0.25mm\"\n          >\n            <path\n              d=\"M 0.145 0.395 L 0.145 0.341 L 0.222 0.341 A 0.473 0.473 0 0 1 0.267 0.343 Q 0.306 0.347 0.334 0.357 Q 0.373 0.371 0.398 0.394 A 0.135 0.135 0 0 1 0.404 0.4 A 0.16 0.16 0 0 1 0.431 0.437 A 0.143 0.143 0 0 1 0.44 0.458 A 0.209 0.209 0 0 1 0.45 0.513 A 0.193 0.193 0 0 1 0.451 0.522 A 0.249 0.249 0 0 1 0.445 0.576 A 0.182 0.182 0 0 1 0.421 0.635 Q 0.392 0.682 0.341 0.706 A 0.249 0.249 0 0 1 0.261 0.729 A 0.309 0.309 0 0 1 0.226 0.73 A 0.291 0.291 0 0 1 0.156 0.722 A 0.264 0.264 0 0 1 0.138 0.717 A 0.226 0.226 0 0 1 0.083 0.691 A 0.206 0.206 0 0 1 0.066 0.679 Q 0.035 0.654 0.018 0.617 A 0.179 0.179 0 0 1 0.002 0.564 A 0.229 0.229 0 0 1 0 0.533 L 0.091 0.533 A 0.143 0.143 0 0 0 0.095 0.568 A 0.116 0.116 0 0 0 0.108 0.598 Q 0.124 0.626 0.154 0.642 A 0.134 0.134 0 0 0 0.191 0.654 A 0.185 0.185 0 0 0 0.226 0.657 A 0.187 0.187 0 0 0 0.266 0.653 Q 0.293 0.647 0.314 0.632 A 0.113 0.113 0 0 0 0.323 0.624 Q 0.355 0.595 0.359 0.541 A 0.223 0.223 0 0 0 0.359 0.524 A 0.175 0.175 0 0 0 0.357 0.493 Q 0.352 0.469 0.341 0.451 A 0.11 0.11 0 0 0 0.292 0.41 A 0.134 0.134 0 0 0 0.289 0.408 Q 0.256 0.395 0.213 0.395 A 0.296 0.296 0 0 0 0.209 0.395 L 0.145 0.395 Z M 0.145 0.321 L 0.209 0.321 A 0.226 0.226 0 0 0 0.242 0.319 Q 0.267 0.315 0.287 0.305 A 0.119 0.119 0 0 0 0.315 0.285 A 0.102 0.102 0 0 0 0.333 0.261 Q 0.349 0.234 0.349 0.199 A 0.2 0.2 0 0 0 0.346 0.168 Q 0.343 0.147 0.335 0.13 A 0.093 0.093 0 0 0 0.294 0.088 Q 0.27 0.075 0.236 0.074 A 0.223 0.223 0 0 0 0.225 0.073 Q 0.187 0.073 0.158 0.088 A 0.111 0.111 0 0 0 0.113 0.131 A 0.115 0.115 0 0 0 0.099 0.171 A 0.153 0.153 0 0 0 0.097 0.196 L 0.006 0.196 A 0.187 0.187 0 0 1 0.022 0.119 A 0.182 0.182 0 0 1 0.033 0.097 A 0.195 0.195 0 0 1 0.101 0.031 A 0.233 0.233 0 0 1 0.11 0.026 Q 0.159 0 0.225 0 A 0.309 0.309 0 0 1 0.282 0.005 A 0.231 0.231 0 0 1 0.338 0.023 Q 0.386 0.045 0.413 0.09 Q 0.439 0.133 0.44 0.195 A 0.317 0.317 0 0 1 0.44 0.201 A 0.136 0.136 0 0 1 0.436 0.234 A 0.18 0.18 0 0 1 0.427 0.258 A 0.167 0.167 0 0 1 0.404 0.298 A 0.208 0.208 0 0 1 0.389 0.315 A 0.176 0.176 0 0 1 0.353 0.343 A 0.235 0.235 0 0 1 0.321 0.359 Q 0.284 0.374 0.233 0.375 A 0.385 0.385 0 0 1 0.222 0.375 L 0.145 0.375 L 0.145 0.321 Z\"\n              vectorEffect=\"non-scaling-stroke\"\n            />\n          </g>\n        </svg>\n      );\n      break;\n    case 4:\n      display.push(\n        <svg viewBox=\"-0.11 0 0.715 0.715\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g\n            className={`number${props.number}`}\n            strokeLinecap=\"round\"\n            fillRule=\"nonzero\"\n            strokeWidth=\"0.25mm\"\n          >\n            <path\n              d=\"M 0.514 0.472 L 0.514 0.545 L 0 0.545 L 0 0.493 L 0.318 0 L 0.392 0 L 0.313 0.142 L 0.103 0.472 L 0.514 0.472 Z M 0.415 0 L 0.415 0.711 L 0.324 0.711 L 0.324 0 L 0.415 0 Z\"\n              vectorEffect=\"non-scaling-stroke\"\n            />\n          </g>\n        </svg>\n      );\n      break;\n    case 5:\n      display.push(\n        <svg viewBox=\"-0.15 0 0.715 0.715\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g\n            className={`number${props.number}`}\n            strokeLinecap=\"round\"\n            fillRule=\"nonzero\"\n            strokeWidth=\"0.25mm\"\n          >\n            <path\n              d=\"M 0.099 0.373 L 0.025 0.354 L 0.062 0 L 0.426 0 L 0.426 0.083 L 0.139 0.083 L 0.118 0.277 A 0.178 0.178 0 0 1 0.134 0.269 Q 0.148 0.262 0.167 0.256 Q 0.197 0.247 0.236 0.247 A 0.245 0.245 0 0 1 0.292 0.253 A 0.189 0.189 0 0 1 0.349 0.276 A 0.192 0.192 0 0 1 0.42 0.355 A 0.231 0.231 0 0 1 0.422 0.358 Q 0.447 0.412 0.447 0.484 Q 0.447 0.552 0.423 0.606 A 0.191 0.191 0 0 1 0.348 0.69 Q 0.303 0.718 0.236 0.72 A 0.36 0.36 0 0 1 0.222 0.721 A 0.276 0.276 0 0 1 0.154 0.712 A 0.253 0.253 0 0 1 0.141 0.709 A 0.201 0.201 0 0 1 0.073 0.672 A 0.191 0.191 0 0 1 0.026 0.616 A 0.22 0.22 0 0 1 0.023 0.611 A 0.206 0.206 0 0 1 0.006 0.564 A 0.276 0.276 0 0 1 0 0.524 L 0.086 0.524 A 0.198 0.198 0 0 0 0.096 0.563 Q 0.104 0.586 0.118 0.604 A 0.113 0.113 0 0 0 0.13 0.616 A 0.12 0.12 0 0 0 0.187 0.644 A 0.173 0.173 0 0 0 0.222 0.647 A 0.152 0.152 0 0 0 0.258 0.644 A 0.116 0.116 0 0 0 0.295 0.628 Q 0.325 0.608 0.34 0.572 Q 0.355 0.537 0.356 0.489 A 0.314 0.314 0 0 0 0.356 0.485 A 0.212 0.212 0 0 0 0.351 0.44 A 0.173 0.173 0 0 0 0.34 0.405 Q 0.323 0.369 0.292 0.348 Q 0.26 0.327 0.214 0.327 A 0.278 0.278 0 0 0 0.191 0.328 Q 0.167 0.33 0.151 0.337 A 0.07 0.07 0 0 0 0.146 0.339 Q 0.123 0.351 0.099 0.373 Z\"\n              vectorEffect=\"non-scaling-stroke\"\n            />\n          </g>\n        </svg>\n      );\n      break;\n    case 6:\n      display.push(\n        <svg viewBox=\"-0.15 0 0.715 0.715\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g\n            className={`number${props.number}`}\n            strokeLinecap=\"round\"\n            fillRule=\"nonzero\"\n            strokeWidth=\"0.25mm\"\n          >\n            <path\n              d=\"M 0.341 0 L 0.349 0 L 0.349 0.076 L 0.341 0.076 Q 0.269 0.076 0.221 0.099 A 0.217 0.217 0 0 0 0.172 0.131 A 0.187 0.187 0 0 0 0.144 0.161 A 0.248 0.248 0 0 0 0.104 0.249 Q 0.091 0.297 0.091 0.347 L 0.091 0.452 Q 0.091 0.504 0.105 0.543 A 0.187 0.187 0 0 0 0.111 0.559 Q 0.13 0.602 0.162 0.625 A 0.123 0.123 0 0 0 0.196 0.642 A 0.106 0.106 0 0 0 0.229 0.647 A 0.139 0.139 0 0 0 0.263 0.643 A 0.107 0.107 0 0 0 0.3 0.626 A 0.127 0.127 0 0 0 0.337 0.583 A 0.159 0.159 0 0 0 0.344 0.569 A 0.196 0.196 0 0 0 0.357 0.52 A 0.257 0.257 0 0 0 0.359 0.484 A 0.231 0.231 0 0 0 0.348 0.412 A 0.218 0.218 0 0 0 0.345 0.404 A 0.148 0.148 0 0 0 0.323 0.364 A 0.133 0.133 0 0 0 0.303 0.343 A 0.101 0.101 0 0 0 0.256 0.322 A 0.141 0.141 0 0 0 0.23 0.32 A 0.14 0.14 0 0 0 0.16 0.338 Q 0.128 0.356 0.107 0.386 A 0.132 0.132 0 0 0 0.084 0.451 L 0.036 0.45 Q 0.043 0.396 0.062 0.357 A 0.221 0.221 0 0 1 0.084 0.32 A 0.177 0.177 0 0 1 0.109 0.294 A 0.183 0.183 0 0 1 0.172 0.257 A 0.23 0.23 0 0 1 0.242 0.246 A 0.256 0.256 0 0 1 0.246 0.246 A 0.241 0.241 0 0 1 0.295 0.25 Q 0.333 0.258 0.361 0.28 Q 0.406 0.314 0.428 0.368 A 0.3 0.3 0 0 1 0.449 0.48 A 0.312 0.312 0 0 1 0.441 0.555 A 0.264 0.264 0 0 1 0.424 0.602 A 0.205 0.205 0 0 1 0.35 0.689 A 0.19 0.19 0 0 1 0.282 0.717 A 0.268 0.268 0 0 1 0.229 0.722 Q 0.171 0.722 0.128 0.698 A 0.214 0.214 0 0 1 0.057 0.635 A 0.286 0.286 0 0 1 0.014 0.547 Q 0 0.499 0 0.449 L 0 0.406 Q 0 0.331 0.015 0.258 A 0.389 0.389 0 0 1 0.056 0.147 A 0.363 0.363 0 0 1 0.067 0.128 A 0.262 0.262 0 0 1 0.155 0.044 A 0.315 0.315 0 0 1 0.171 0.035 Q 0.226 0.006 0.307 0.001 A 0.559 0.559 0 0 1 0.341 0 Z\"\n              vectorEffect=\"non-scaling-stroke\"\n            />\n          </g>\n        </svg>\n      );\n      break;\n    case 7:\n      display.push(\n        <svg viewBox=\"-0.15 0 0.715 0.715\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g\n            className={`number${props.number}`}\n            strokeLinecap=\"round\"\n            fillRule=\"nonzero\"\n            strokeWidth=\"0.25mm\"\n          >\n            <path\n              d=\"M 0.481 0 L 0.481 0.05 L 0.187 0.711 L 0.091 0.711 L 0.384 0.073 L 0 0.073 L 0 0 L 0.481 0 Z\"\n              vectorEffect=\"non-scaling-stroke\"\n            />\n          </g>\n        </svg>\n      );\n      break;\n    case 8:\n      display.push(\n        <svg viewBox=\"-0.15 0 0.715 0.715\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g\n            className={`number${props.number}`}\n            strokeLinecap=\"round\"\n            fillRule=\"evenodd\"\n            strokeWidth=\"0.25mm\"\n          >\n            <path\n              d=\"M 0.447 0.58 A 0.234 0.234 0 0 0 0.452 0.528 A 0.212 0.212 0 0 0 0.452 0.524 A 0.174 0.174 0 0 0 0.423 0.428 A 0.193 0.193 0 0 0 0.399 0.399 A 0.212 0.212 0 0 0 0.342 0.359 A 0.237 0.237 0 0 0 0.291 0.341 A 0.291 0.291 0 0 0 0.225 0.334 Q 0.159 0.334 0.108 0.359 A 0.234 0.234 0 0 0 0.098 0.364 A 0.195 0.195 0 0 0 0.029 0.428 A 0.173 0.173 0 0 0 0.011 0.463 A 0.187 0.187 0 0 0 0 0.528 A 0.242 0.242 0 0 0 0.004 0.572 A 0.177 0.177 0 0 0 0.03 0.638 Q 0.06 0.684 0.111 0.707 A 0.249 0.249 0 0 0 0.159 0.723 A 0.3 0.3 0 0 0 0.226 0.73 A 0.32 0.32 0 0 0 0.263 0.728 A 0.257 0.257 0 0 0 0.341 0.707 A 0.191 0.191 0 0 0 0.422 0.638 A 0.173 0.173 0 0 0 0.447 0.58 Z M 0.408 0.288 A 0.166 0.166 0 0 0 0.436 0.195 A 0.241 0.241 0 0 0 0.432 0.15 A 0.175 0.175 0 0 0 0.408 0.089 A 0.176 0.176 0 0 0 0.334 0.023 A 0.22 0.22 0 0 0 0.286 0.006 A 0.273 0.273 0 0 0 0.226 0 A 0.29 0.29 0 0 0 0.19 0.002 A 0.23 0.23 0 0 0 0.118 0.023 Q 0.07 0.046 0.043 0.089 A 0.173 0.173 0 0 0 0.021 0.145 A 0.236 0.236 0 0 0 0.016 0.195 A 0.168 0.168 0 0 0 0.043 0.288 A 0.177 0.177 0 0 0 0.065 0.316 A 0.195 0.195 0 0 0 0.117 0.354 Q 0.165 0.377 0.226 0.377 A 0.277 0.277 0 0 0 0.259 0.376 A 0.223 0.223 0 0 0 0.334 0.354 A 0.225 0.225 0 0 0 0.339 0.35 A 0.188 0.188 0 0 0 0.408 0.288 Z M 0.361 0.526 A 0.156 0.156 0 0 0 0.356 0.487 A 0.129 0.129 0 0 0 0.344 0.456 Q 0.327 0.426 0.296 0.409 A 0.133 0.133 0 0 0 0.249 0.393 A 0.172 0.172 0 0 0 0.225 0.392 A 0.166 0.166 0 0 0 0.19 0.395 A 0.126 0.126 0 0 0 0.154 0.409 Q 0.124 0.426 0.108 0.456 A 0.138 0.138 0 0 0 0.093 0.505 A 0.174 0.174 0 0 0 0.091 0.526 A 0.172 0.172 0 0 0 0.094 0.56 A 0.125 0.125 0 0 0 0.108 0.597 A 0.11 0.11 0 0 0 0.154 0.642 A 0.136 0.136 0 0 0 0.193 0.654 A 0.187 0.187 0 0 0 0.226 0.657 Q 0.268 0.657 0.298 0.642 Q 0.328 0.626 0.344 0.597 A 0.125 0.125 0 0 0 0.358 0.558 A 0.174 0.174 0 0 0 0.361 0.526 Z M 0.344 0.196 A 0.145 0.145 0 0 0 0.34 0.161 A 0.119 0.119 0 0 0 0.329 0.133 A 0.113 0.113 0 0 0 0.288 0.089 A 0.111 0.111 0 0 0 0.243 0.074 A 0.141 0.141 0 0 0 0.226 0.073 A 0.142 0.142 0 0 0 0.194 0.077 A 0.111 0.111 0 0 0 0.164 0.088 A 0.106 0.106 0 0 0 0.122 0.131 A 0.122 0.122 0 0 0 0.11 0.168 A 0.164 0.164 0 0 0 0.107 0.196 A 0.153 0.153 0 0 0 0.111 0.229 A 0.118 0.118 0 0 0 0.122 0.26 A 0.106 0.106 0 0 0 0.164 0.303 A 0.115 0.115 0 0 0 0.204 0.316 A 0.15 0.15 0 0 0 0.226 0.318 A 0.142 0.142 0 0 0 0.257 0.315 A 0.11 0.11 0 0 0 0.288 0.303 Q 0.314 0.288 0.329 0.26 A 0.121 0.121 0 0 0 0.342 0.221 A 0.159 0.159 0 0 0 0.344 0.196 Z\"\n              vectorEffect=\"non-scaling-stroke\"\n            />\n          </g>\n        </svg>\n      );\n      break;\n    default:\n      break;\n  }\n\n  // return <React.Fragment><img src={SVG1} alt=\"1\"/></React.Fragment>;\n  return <React.Fragment>{display[0]}</React.Fragment>;\n};\n\nexport default NumberSVG;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport MineSVG from \"./MineSVG\";\nimport NumberSVG from \"./NumberSVG\";\n\nexport const Gameboard = (props) => {\n  const handleRightClick = (e, row, col) => {\n    if (props.gameOver) {\n      return;\n    }\n    e.preventDefault();\n    props.flagSquare(row, col);\n  };\n\n  const handleClick = (row, col) => {\n    if (props.gameOver) {\n      return;\n    }\n    props.clearSquare(row, col);\n  };\n\n  // Add id for testing cypress win condition clicking all non mines\n  let cypressId = null;\n  if (process.env.NODE_ENV === \"development\") {\n    cypressId = \"no-mine\";\n  }\n\n  const [timeDisplay, setTimeDisplay] = useState(0);\n\n  const timer = setInterval(() => {\n    return setTimeDisplay(Math.floor((Date.now() - props.time) / 1000));\n  }, 1000);\n\n  useEffect(() => {\n    return () => {\n      setTimeDisplay(0);\n      clearInterval(timer);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"Gameboard\">\n      <p className=\"timer\">{!props.gameOver ? timeDisplay : props.winTime}</p>\n      <div>\n        {props.board.map((row, i) => {\n          return (\n            <div key={i} className=\"row\">\n              {row.map((square, j) => {\n                return (\n                  <div\n                    key={`${i}-${j}`}\n                    data-row={i}\n                    data-column={j}\n                    data-testid=\"square\"\n                    data-cypress={square.mine ? null : cypressId}\n                    className=\"square\"\n                    onContextMenu={(e) => handleRightClick(e, i, j)}\n                    onClick={() => handleClick(i, j)}\n                  >\n                    {square.mine && props.gameOver && !props.winner ? (\n                      <div className=\"mine\">\n                        <MineSVG />\n                      </div>\n                    ) : null}\n                    {square.adjacent > 0 && square.clear ? (\n                      <div className=\"adjacent\">\n                        <NumberSVG number={square.adjacent} />\n                      </div>\n                    ) : null}\n                    {(square.flag && !square.clear) ||\n                    (props.gameOver && props.winner && square.mine) ? (\n                      <div className=\"flag\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"16\"\n                          height=\"16\"\n                          fill=\"currentColor\"\n                          viewBox=\"0 0 16 16\"\n                        >\n                          <path d=\"M14.778.085A.5.5 0 0 1 15 .5V8a.5.5 0 0 1-.314.464L14.5 8l.186.464-.003.001-.006.003-.023.009a12.435 12.435 0 0 1-.397.15c-.264.095-.631.223-1.047.35-.816.252-1.879.523-2.71.523-.847 0-1.548-.28-2.158-.525l-.028-.01C7.68 8.71 7.14 8.5 6.5 8.5c-.7 0-1.638.23-2.437.477A19.626 19.626 0 0 0 3 9.342V15.5a.5.5 0 0 1-1 0V.5a.5.5 0 0 1 1 0v.282c.226-.079.496-.17.79-.26C4.606.272 5.67 0 6.5 0c.84 0 1.524.277 2.121.519l.043.018C9.286.788 9.828 1 10.5 1c.7 0 1.638-.23 2.437-.477a19.587 19.587 0 0 0 1.349-.476l.019-.007.004-.002h.001\" />\n                        </svg>\n                      </div>\n                    ) : null}\n                    {!square.clear ? (\n                      <p\n                        className={\n                          !props.gameOver ? \"unclear\" : \"unclear-no-hover\"\n                        }\n                      ></p>\n                    ) : null}\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    board: state.minesweeper.board,\n    gameOver: state.minesweeper.gameOver,\n    winner: state.minesweeper.winner,\n    time: state.minesweeper.time,\n    winTime: state.minesweeper.winTime,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    flagSquare: (row, column) => {\n      dispatch(actions.flagSquare(row, column));\n    },\n    clearSquare: (row, column) => {\n      dispatch(actions.clearSquare(row, column));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Gameboard);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\n\nexport const EndScreen = (props) => {\n  const [worstScore, setWorstScore] = useState(9999999);\n\n  useEffect(() => {\n    // Fetch high scores on first load\n    if (!props.isFetched) {\n      props.fetchScores();\n    }\n\n    // Calculate worst score on scoreboard to beat\n    if (props.scores[props.difficulty].length < 10) {\n      setWorstScore(9999999);\n    } else {\n      // Set worst score as last value\n      setWorstScore(props.scores[props.difficulty][9].score);\n    }\n\n    // eslint-disable-next-line\n  }, []);\n\n  const [name, setName] = useState(\"\");\n  const handleChange = (e) => {\n    setName(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // If user already has a better score don't submit\n    const usersScore = props.scores[props.difficulty].filter(\n      (user) => user.name === name\n    );\n\n    if (usersScore.length && props.winTime > usersScore[0].score) {\n      props.setScoreSubmitted();\n      return;\n    }\n    if (props.winTime < worstScore) {\n      // Only submit if will be on scoreboard\n      props.postScore(name, props.winTime, props.difficulty);\n    }\n  };\n  return (\n    <div className=\"EndScreen\">\n      {props.winner ? <h1>You Win</h1> : <h1>You Lose</h1>}\n\n      {props.isFetched ? (\n        <div className=\"scoreboard\">\n          <div>\n            <h2>Easy</h2>\n            <div>\n              <ul>\n                {props.scores[\"Easy\"].map((score, i) => {\n                  return <li key={\"Easy-place-\" + i}>{i + 1}.</li>;\n                })}\n              </ul>\n              <ul>\n                {props.scores[\"Easy\"].map((score, i) => {\n                  return <li key={\"Easy-name-\" + i}>{score.name}</li>;\n                })}\n              </ul>\n              <ul>\n                {props.scores[\"Easy\"].map((score, i) => {\n                  return <li key={\"Easy-score-\" + i}>{score.score}</li>;\n                })}\n              </ul>\n            </div>\n          </div>\n          <div>\n            <h2>Medium</h2>\n            <div>\n              <ul>\n                {props.scores[\"Medium\"].map((score, i) => {\n                  return <li key={\"Medium-place-\" + i}>{i + 1}.</li>;\n                })}\n              </ul>\n              <ul>\n                {props.scores[\"Medium\"].map((score, i) => {\n                  return <li key={\"Medium-\" + i}>{score.name}</li>;\n                })}\n              </ul>\n              <ul>\n                {props.scores[\"Medium\"].map((score, i) => {\n                  return <li key={\"Medium-\" + i}>{score.score}</li>;\n                })}\n              </ul>\n            </div>\n          </div>\n          <div>\n            <h2>Hard</h2>\n            <div>\n              <ul>\n                {props.scores[\"Hard\"].map((score, i) => {\n                  return <li key={\"Hard-place-\" + i}>{i + 1}.</li>;\n                })}\n              </ul>\n              <ul>\n                {props.scores[\"Hard\"].map((score, i) => {\n                  return <li key={\"Hard-\" + i}>{score.name}</li>;\n                })}\n              </ul>\n              <ul>\n                {props.scores[\"Hard\"].map((score, i) => {\n                  return <li key={\"Hard-\" + i}>{score.score}</li>;\n                })}\n              </ul>\n            </div>\n          </div>\n        </div>\n      ) : null}\n\n      {!props.scoreSubmitted && props.winner ? (\n        <h2 className=\"win-time\">Your Score: {props.winTime}</h2>\n      ) : null}\n\n      {!props.scoreSubmitted && props.winner && props.winTime < worstScore ? (\n        <form className=\"name-form\" onSubmit={(e) => handleSubmit(e)}>\n          <label htmlFor=\"name\">Enter Name</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            required\n            maxLength=\"20\"\n            value={name}\n            onChange={handleChange}\n          />\n          <button\n            className=\"button small\"\n            type=\"submit\"\n            aria-label=\"submit score\"\n          >\n            Submit Score\n          </button>\n        </form>\n      ) : null}\n      <button\n        className=\"button\"\n        onClick={props.restartGame}\n        aria-label=\"restart game\"\n      >\n        Restart\n      </button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    gameOver: state.minesweeper.gameOver,\n    winner: state.minesweeper.winner,\n    winTime: state.minesweeper.winTime,\n    scores: state.minesweeper.scores,\n    isFetched: state.minesweeper.isFetched,\n    difficulty: state.minesweeper.difficulty,\n    scoreSubmitted: state.minesweeper.scoreSubmitted,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    restartGame: () => {\n      dispatch(actions.restartGame());\n    },\n    postScore: (name, winTime, difficulty, worstScore) => {\n      dispatch(actions.postScore(name, winTime, difficulty, worstScore));\n    },\n    fetchScores: () => {\n      dispatch(actions.fetchScores());\n    },\n    setScoreSubmitted: () => {\n      dispatch(actions.setScoreSubmitted());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EndScreen);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport DifficultyForm from \"./components/DifficultyForm\";\nimport Gameboard from \"./components/Gameboard\";\nimport EndScreen from \"./components/EndScreen\";\nimport \"./reset.css\";\nimport \"./App.css\";\n\nconst App = (props) => {\n  return (\n    <div className=\"App\">\n      {props.startGame ? null : (\n        <div className=\"start-screen\">\n          <h1>Minesweeper</h1>\n          <div className=\"mouse-rules\">\n            <p>Left click a square to clear a space</p>\n            <p>Right click a square to flag a mine</p>\n          </div>\n          <div className=\"touch-rules\">\n            <p>Touch a square to mark a clear space</p>\n            <p>Hold on a square to flag a mine</p>\n          </div>\n          <DifficultyForm />\n        </div>\n      )}\n      {props.startGame ? <Gameboard /> : null}\n      {props.gameOver ? <EndScreen /> : null}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    startGame: state.minesweeper.startGame,\n    gameOver: state.minesweeper.gameOver,\n  };\n};\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const copyBoard = (board) => {\n  let boardCopy = [];\n  for (let i = 0; i < board.length; i++) {\n    const row = [];\n    for (let j = 0; j < board[i].length; j++) {\n      row.push({\n        ...board[i][j],\n      });\n    }\n    boardCopy.push(row);\n  }\n  return boardCopy;\n};\n\nexport default copyBoard;\n","// Check 8 surrounding tiles for non cleared recursively\nexport const checkSurrounds = (board, row, col) => {\n  for (let i = row - 1; i <= row + 1; i++) {\n    for (let j = col - 1; j <= col + 1; j++) {\n      // Continue if square is outside boundary\n      if (i <= -1 || i >= board.length || j <= -1 || j >= board[i].length) {\n        continue;\n      }\n      if (!board[i][j].clear) {\n        // If not a mine mark clear\n        board[i][j].clear = true;\n        if (board[i][j].adjacent === 0) {\n          // Check 8 surrounding tiles of tile with no adjacent mines\n          checkSurrounds(board, i, j);\n        }\n      }\n    }\n  }\n};\n\n// Clear all connected spots with 0 adjacent mines\nconst clearAdjacent = (board, row, col) => {\n  checkSurrounds(board, row, col);\n  return board;\n};\n\nexport default clearAdjacent;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport copyBoard from \"../helpers/copyBoard\";\nimport clearAdjacent from \"../helpers/clearAdjacent\";\nimport { flattenArray } from \"../helpers/boardGeneration\";\n\nconst initialState = {\n  difficulty: \"Easy\",\n  startGame: false,\n  board: [],\n  gameOver: false,\n  winner: false,\n  time: 0,\n  winTime: null,\n  scores: {\n    Easy: [],\n    Medium: [],\n    Hard: [],\n  },\n  isFetched: false,\n  scoreSubmitted: false,\n};\n\nconst storeDifficulty = (state, action) => {\n  return {\n    ...state,\n    difficulty: action.difficulty,\n  };\n};\n\nconst startGame = (state, action) => {\n  return {\n    ...state,\n    startGame: action.startGame,\n    board: action.board,\n    time: Date.now(),\n  };\n};\n\nconst flagSquare = (state, action) => {\n  // Duplicate board immutably\n  let boardCopy = copyBoard(state.board);\n\n  // Only change flag if not cleared\n  if (!boardCopy[action.row][action.col].clear) {\n    if (boardCopy[action.row][action.col].flag) {\n      // Remove flag if square already has it\n      boardCopy[action.row][action.col].flag = false;\n    } else {\n      boardCopy[action.row][action.col].flag = true;\n    }\n  }\n\n  return {\n    ...state,\n    board: boardCopy,\n  };\n};\n\nconst clearSquare = (state, action) => {\n  let boardCopy = copyBoard(state.board);\n  boardCopy[action.row][action.col].clear = true;\n\n  // Remove flag if the square had one\n  boardCopy[action.row][action.col].flag = false;\n\n  // If spot is a mine\n  let gameOver = state.gameOver;\n  let winner = state.winner;\n  if (boardCopy[action.row][action.col].mine) {\n    gameOver = true;\n    winner = false;\n\n    // Show all mines\n    for (let i = 0; i < boardCopy.length; i++) {\n      for (let j = 0; j < boardCopy[i].length; j++) {\n        if (boardCopy[i][j].mine) {\n          boardCopy[i][j].clear = true;\n        }\n      }\n    }\n  } else if (boardCopy[action.row][action.col].adjacent === 0) {\n    // If square with no adjacent mines clear adjacent non mine squares\n    boardCopy = clearAdjacent(boardCopy, action.row, action.col);\n  }\n\n  let winTime;\n  // Check if won\n  if (\n    flattenArray(boardCopy).filter((square) => !square.clear && !square.mine)\n      .length === 0\n  ) {\n    gameOver = true;\n    winner = true;\n    winTime = Math.floor((Date.now() - state.time) / 1000);\n  }\n\n  return {\n    ...state,\n    board: boardCopy,\n    gameOver,\n    winner,\n    winTime,\n  };\n};\n\nconst restartGame = (state, action) => {\n  return {\n    ...state,\n    gameOver: false,\n    startGame: false,\n    board: [],\n    winner: false,\n    winTime: null,\n    scoreSubmitted: false,\n  };\n};\n\nconst submitScore = (state, action) => {\n  let newScores = [];\n  for (let score of state.scores[state.difficulty]) {\n    newScores.push({ ...score });\n  }\n\n  newScores.push({ name: action.name, score: state.winTime });\n  newScores.sort((a, b) => {\n    return a.score - b.score;\n  });\n\n  newScores = newScores.slice(0, 10);\n\n  return {\n    ...state,\n    scores: {\n      ...state.scores,\n      [state.difficulty]: newScores,\n    },\n    scoreSubmitted: true,\n  };\n};\n\nconst saveFetchedScores = (state, action) => {\n  let newScores = {};\n  for (let difficulty in action.scores) {\n    let array = [];\n    for (let score in action.scores[difficulty]) {\n      array.push({ name: score, score: action.scores[difficulty][score] });\n    }\n    array.sort((a, b) => {\n      return a.score - b.score;\n    });\n\n    array = array.slice(0, 10);\n    newScores[difficulty] = array;\n  }\n  return {\n    ...state,\n    scores: newScores,\n    isFetched: true,\n  };\n};\n\nconst setScoreSubmitted = (state, action) => {\n  return {\n    ...state,\n    scoreSubmitted: true,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.STORE_DIFFICULTY:\n      return storeDifficulty(state, action);\n    case actionTypes.START_GAME:\n      return startGame(state, action);\n    case actionTypes.FLAG_SQUARE:\n      return flagSquare(state, action);\n    case actionTypes.CLEAR_SQUARE:\n      return clearSquare(state, action);\n    case actionTypes.RESTART_GAME:\n      return restartGame(state, action);\n    case actionTypes.SUBMIT_SCORE:\n      return submitScore(state, action);\n    case actionTypes.SAVE_FETCHED_SCORES:\n      return saveFetchedScores(state, action);\n    case actionTypes.SET_SCORE_SUBMITTED:\n      return setScoreSubmitted(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport minesweeper from \"./store/reducers/minesweeper\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  minesweeper,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}