{"version":3,"sources":["store/actions/actionTypes.js","store/actions/minesweeper.js","components/DifficultyForm.js","components/Gameboard.js","App.js","store/reducers/minesweeper.js","index.js"],"names":["STORE_DIFFICULTY","START_GAME","startGame","difficulty","board","size","array","i","row","j","push","clear","mine","flag","adjacent","generateBoard","length","x","y","calculateAdjacent","mines","reduce","acc","cur","filter","square","Math","floor","random","column","populateMines","type","actionTypes","connect","state","minesweeper","dispatch","storeDifficulty","actions","props","handleChange","e","target","value","onSubmit","preventDefault","name","id","defaultChecked","onChange","htmlFor","className","map","gameOver","initialState","action","reducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4b074cc.chunk.js","sourcesContent":["export const STORE_DIFFICULTY = \"STORE_DIFFICULTY\";\nexport const START_GAME = \"START_GAME\";\n","import * as actionTypes from \"./actionTypes\";\n\nexport const storeDifficulty = (difficulty) => {\n  return {\n    type: actionTypes.STORE_DIFFICULTY,\n    difficulty,\n  };\n};\n\n// Generate empty board\nexport const generateBoard = (difficulty) => {\n  let size;\n  switch (difficulty) {\n    case \"Easy\":\n      size = 10;\n      break;\n    case \"Medium\":\n      size = 20;\n      break;\n    case \"Hard\":\n      size = 30;\n      break;\n    default:\n      break;\n  }\n\n  let array = [];\n  for (let i = 0; i < size; i++) {\n    let row = [];\n    for (let j = 0; j < size; j++) {\n      row.push({\n        clear: false,\n        mine: false,\n        flag: false,\n        adjacent: 0,\n      });\n    }\n    array.push(row);\n  }\n\n  return array;\n};\n\n// Turn 2 dimensional array into 1 dimensional array\nexport const flattenArray = (array) => {\n  return array.reduce((acc, cur) => {\n    return [...acc, ...cur];\n  }, []);\n};\n\n// Add mines to board\nexport const populateMines = (difficulty, board) => {\n  let mines;\n  switch (difficulty) {\n    case \"Easy\":\n      mines = 15;\n      break;\n    case \"Medium\":\n      mines = 60;\n      break;\n    case \"Hard\":\n      mines = 135;\n      break;\n    default:\n      break;\n  }\n\n  // Randomly insert mines until desired amount added\n  while (\n    flattenArray(board).filter((square) => square.mine === true).length < mines\n  ) {\n    const row = Math.floor(Math.random() * board.length);\n    const column = Math.floor(Math.random() * board.length);\n    board[row][column].mine = true;\n  }\n\n  return board;\n};\n\n// Calculate the adjacent mines to each square\nexport const calculateAdjacent = (board) => {\n  for (let i = 0; i < board.length; i++) {\n    for (let j = 0; j < board[i].length; j++) {\n      // Break if square is a mine\n      if (board[i][j].mine) {\n        continue;\n      }\n      // For each square check the 8 squares surrounding it\n      for (let x = i - 1; x <= i + 1; x++) {\n        for (let y = j - 1; y <= j + 1; y++) {\n          // Break if square is outside boundary\n          if (x <= -1 || x >= board.length || y <= -1 || y >= board[i].length) {\n            continue;\n          }\n          if (board[x][y].mine) {\n            board[i][j].adjacent = board[i][j].adjacent + 1;\n          }\n        }\n      }\n    }\n  }\n  return board;\n};\n\nexport const startGame = (difficulty) => {\n  let board = generateBoard(difficulty);\n  board = populateMines(difficulty, board);\n  board = calculateAdjacent(board);\n\n  return {\n    type: actionTypes.START_GAME,\n    startGame: true,\n    board,\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\n\nexport const DifficultyForm = (props) => {\n  const handleChange = (e) => {\n    props.storeDifficulty(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.startGame(props.difficulty);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Choose Difficulty</h2>\n      <div>\n        <input\n          type=\"radio\"\n          name=\"difficulty\"\n          id=\"Easy\"\n          value=\"Easy\"\n          defaultChecked={props.difficulty === \"Easy\"}\n          onChange={handleChange}\n          data-testid=\"easy-difficulty\"\n        />\n        <label htmlFor=\"Easy\">Easy</label>\n        <input\n          type=\"radio\"\n          name=\"difficulty\"\n          id=\"Medium\"\n          value=\"Medium\"\n          defaultChecked={props.difficulty === \"Medium\"}\n          onChange={handleChange}\n          data-testid=\"medium-difficulty\"\n        />\n        <label htmlFor=\"Medium\">Medium</label>\n        <input\n          type=\"radio\"\n          name=\"difficulty\"\n          id=\"Hard\"\n          value=\"Hard\"\n          defaultChecked={props.difficulty === \"Hard\"}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"Hard\">Hard</label>\n        <div>\n          <button type=\"submit\">Start</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    difficulty: state.minesweeper.difficulty,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    storeDifficulty: (difficulty) => {\n      dispatch(actions.storeDifficulty(difficulty));\n    },\n    startGame: (difficulty) => {\n      dispatch(actions.startGame(difficulty));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DifficultyForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nexport const Gameboard = (props) => {\n  return (\n    <div className=\"Gameboard\">\n      {props.board.map((row, i) => {\n        return (\n          <div key={i} className=\"row\">\n            {row.map((square, j) => {\n              return (\n                <div key={`${i}-${j}`} data-testid=\"square\" className=\"square\">\n                  {square.mine && props.gameOver ? <p>üí£</p> : null}\n                  {(square.adjacent > 0 && square.clear) || props.gameOver ? (\n                    <p>{square.adjacent}</p>\n                  ) : null}\n                  {square.flag ? <p>üèÅ</p> : null}\n                  {!square.clear ? <p className=\"unclear\"></p> : null}\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    board: state.minesweeper.board,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Gameboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport DifficultyForm from \"./components/DifficultyForm\";\nimport Gameboard from \"./components/Gameboard\";\nimport \"./reset.css\";\nimport \"./App.css\";\n\nconst App = (props) => {\n  return (\n    <div className=\"App\">\n      {props.startGame ? null : (\n        <div>\n          <h1>Minesweeper</h1>\n          <div>\n            <p>Left click a square to mark a clear space</p>\n            <p>Right click a square to flag a mine</p>\n          </div>\n          <DifficultyForm />\n        </div>\n      )}\n      {props.startGame ? <Gameboard /> : null}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    startGame: state.minesweeper.startGame,\n  };\n};\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  difficulty: \"Easy\",\n  startGame: false,\n  board: [],\n};\n\nconst storeDifficulty = (state, action) => {\n  return {\n    ...state,\n    difficulty: action.difficulty,\n  };\n};\n\nconst startGame = (state, action) => {\n  return {\n    ...state,\n    startGame: action.startGame,\n    board: action.board,\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.STORE_DIFFICULTY:\n      return storeDifficulty(state, action);\n    case actionTypes.START_GAME:\n      return startGame(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport minesweeper from \"./store/reducers/minesweeper\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  minesweeper,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}